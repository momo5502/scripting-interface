name: Build

on:
  push:
    branches:
      - "*"
  pull_request:
    branches:
      - "*"
    types: [opened, synchronize, reopened]

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-windows:
    name: Build Windows
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        configuration:
          - Debug
          - Release
        include:
          - configuration: Debug
            preset: debug
          - configuration: Release
            preset: release
    steps:
      - name: Checkout Source
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Enable Developer Command Prompt
        uses: ilammy/msvc-dev-cmd@v1.13.0

      - name: CMake Configure
        run: cmake --preset=${{matrix.preset}} -DMOMO_SCRIPTING_ENABLE_SAMPLES=On

      - name: CMake Build
        run: cmake --build --preset=${{matrix.preset}}

      - name: Setup Node.js Environment
        uses: actions/setup-node@v4.1.0

      - name: Setup Python Environment
        uses: actions/setup-python@v5.4.0
        with:
          python-version: '3.12'

      - name: Run JavaScript Test
        run: |
          node ./samples/javascript-sample/test.js ./build/${{matrix.preset}}/samples/javascript-sample/javascript-sample.dll

      - name: Run Python Test
        run: |
          python3 ./samples/python-sample/test.py ./build/${{matrix.preset}}/samples/python-sample/python-sample.dll

  build-linux:
    name: Build Linux
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        configuration:
          - Debug
          - Release
        include:
          - configuration: Debug
            preset: debug
          - configuration: Release
            preset: release
    steps:
      - name: Checkout Source
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Dependencies
        run: |
          sudo add-apt-repository --yes ppa:ubuntu-toolchain-r/test
          sudo apt install -y g++-11 ninja-build libwayland-dev libxkbcommon-dev xorg-dev
          sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-11 30
          sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-11 30
          sudo update-alternatives --install /usr/bin/cc cc /usr/bin/gcc 30
          sudo update-alternatives --set cc /usr/bin/gcc
          sudo update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++ 30
          sudo update-alternatives --set c++ /usr/bin/g++
          sudo update-alternatives --config gcc
          sudo update-alternatives --config g++

      - name: CMake Configure
        run: cmake --preset=${{matrix.preset}} -DMOMO_SCRIPTING_ENABLE_SAMPLES=On

      - name: CMake Build
        run: cmake --build --preset=${{matrix.preset}}

      - name: Setup Node.js Environment
        uses: actions/setup-node@v4.1.0

      - name: Setup Python Environment
        uses: actions/setup-python@v5.4.0
        with:
          python-version: '3.12'

      - name: Run JavaScript Test
        run: |
          node ./samples/javascript-sample/test.js ./build/${{matrix.preset}}/samples/javascript-sample/libjavascript-sample.so

      - name: Run Python Test
        run: |
          python3 ./samples/python-sample/test.py ./build/${{matrix.preset}}/samples/python-sample/libpython-sample.so

  build-mac-arm:
    name: Build macOS
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        configuration:
          - Debug
          - Release
        include:
          - configuration: Debug
            preset: debug
          - configuration: Release
            preset: release
    steps:
      - name: Checkout Source
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Dependencies
        run: |
          brew install ninja

      - name: CMake Configure
        run: cmake --preset=${{matrix.preset}} -DMOMO_SCRIPTING_ENABLE_SAMPLES=On

      - name: CMake Build
        run: cmake --build --preset=${{matrix.preset}}

      - name: Setup Node.js Environment
        uses: actions/setup-node@v4.1.0

      - name: Setup Python Environment
        uses: actions/setup-python@v5.4.0
        with:
          python-version: '3.12'

      - name: Run JavaScript Test
        run: |
          node ./samples/javascript-sample/test.js ./build/${{matrix.preset}}/samples/javascript-sample/libjavascript-sample.dylib

      - name: Run Python Test
        run: |
          python3 ./samples/python-sample/test.py ./build/${{matrix.preset}}/samples/python-sample/libpython-sample.dylib
